package net.tfobz.arduinoracer.spielmodi;

import java.util.ArrayList;

import javax.ws.rs.client.ClientBuilder;
import javax.ws.rs.client.Entity;
import javax.ws.rs.core.MediaType;

import net.tfobz.arduinoracer.Spieloberflaeche;
import net.tfobz.arduinoracer.komponenten.MultiplayerAuto;
import net.tfobz.arduinoracer.komponenten.anzeigen.RundenfahrtAnzeige;
import net.tfobz.arduinoracer.menu.NeuesSpielPanel;
import net.tfobz.arduinoracer.menu.RundenfahrtPauseDialog;
import net.tfobz.arduinoracer.runden.Position;
import net.tfobz.arduinoracer.runden.Runde;
import net.tfobz.arduinoracer.runden.Rundenzeit;
import net.tfobz.arduinoracer.util.Bodenbegebenheit;
import net.tfobz.arduinoracer.util.Netzwerkstrings;
import processing.core.PApplet;
import processing.core.PGraphics;

/**
 * Die Klasse Rundenfahrt, die das Interface Spielmodi implementiert, verwaltet
 * jenen Spielmodus, der der alleinige Fahrt eines Spielers gegen die Uhr
 * entspricht. Dabei wird die aktuelle Rundenzeit gestoppt, mit der bisher
 * besten Runde verglichen und in eine Anzeige angezeigt
 * 
 * @author Thomas Nocker
 *
 */
public class Rundenfahrt implements Spielmodi {

	/**
	 * Die aktuelle Rundenzeit des Fahrers
	 */
	private Rundenzeit rundenzeit = new Rundenzeit();
	/**
	 * Die Spieloberfl√§che des Spiels
	 */
	private Spieloberflaeche oberflaeche;
	/**
	 * Der aktuelle Sektor, auf dem sich der Spieler befindet
	 */
	private byte sektor = -1;
	/**
	 * Die bisher Beste Rundenzeit
	 */
	private Runde bisherBesteZeit = null;
	/**
	 * Die Anzeige, die die aktuelle Rundenzeit sowie die Differenz zur bisher
	 * besten Runde anzeigt
	 */
	private RundenfahrtAnzeige anzeige = null;
	/**
	 * Der Dialog, der bei der Pause angezeigt wird
	 */
	private RundenfahrtPauseDialog pauseDialog = null;

	/**
	 * das Auto der bisherigen besten Rundenfahrt
	 */
	private MultiplayerAuto autoFuehrender = null;

	/**
	 * die Positionen einer Default-Rundenbestzeit
	 */
	Object[][] defaultPositionen = { { 22F, -145F, 225.038F, 6.28319F },
			{ 127F, -145.F, 310.579F, 6.28319F },
			{ 227F, -145.F, 394.876F, 6.28319F },
			{ 291F, -145.F, 449.983F, 6.28319F },
			{ 412F, -145.F, 558.312F, 6.28319F },
			{ 504F, -145.F, 643.07F, 6.28319F },
			{ 590F, -145.F, 724.39F, 6.28319F },
			{ 711F, -145.F, 842.944F, 6.28319F },
			{ 801F, -145.F, 933.412F, 6.28319F },
			{ 855F, -145.F, 987.644F, 6.28319F },
			{ 965F, -145.F, 1097.91F, 6.28319F },
			{ 1041F, -145.F, 1170.98F, 6.28319F },
			{ 1108F, -149.978F, 1232.76F, 6.20279F },
			{ 1199F, -165.001F, 1311.04F, 6.09359F },
			{ 1315F, -195.464F, 1400.33F, 5.95439F },
			{ 1372F, -212.718F, 1441.46F, 5.88599F },
			{ 1487F, -254.968F, 1512.72F, 5.74799F },
			{ 1540F, -275.633F, 1543.F, 5.68439F },
			{ 1639F, -317.185F, 1590.61F, 5.56559F },
			{ 1723F, -353.545F, 1624.64F, 5.46479F },
			{ 1806F, -389.685F, 1652.28F, 5.36519F },
			{ 1914F, -435.508F, 1678.71F, 5.23559F },
			{ 2006F, -476.662F, 1696.73F, 5.12519F },
			{ 2123F, -535.427F, 1713.15F, 4.98479F },
			{ 2214F, -584.567F, 1721.24F, 4.87559F },
			{ 2277F, -619.696F, 1727.02F, 4.87559F },
			{ 2371F, -674.581F, 1736.06F, 4.87559F },
			{ 2452F, -723.708F, 1744.15F, 4.87559F },
			{ 2559F, -791.805F, 1755.36F, 4.87559F },
			{ 2648F, -850.658F, 1765.05F, 4.87559F },
			{ 2758F, -926.778F, 1777.59F, 4.87559F },
			{ 2820F, -970.756F, 1784.83F, 4.87559F },
			{ 2926F, -1049.08F, 1797.73F, 4.87559F },
			{ 2985F, -1093.65F, 1805.06F, 4.87559F },
			{ 3094F, -1175.8F, 1818.59F, 4.87559F },
			{ 3151F, -1218.7F, 1825.66F, 4.87559F },
			{ 3255F, -1296.81F, 1838.52F, 4.87559F },
			{ 3316F, -1341.05F, 1842.51F, 4.80238F },
			{ 3399F, -1397.76F, 1841.96F, 4.70279F },
			{ 3466F, -1440.95F, 1838.07F, 4.62239F },
			{ 3538F, -1484.07F, 1830.38F, 4.53598F },
			{ 3637F, -1536.62F, 1814.4F, 4.41718F },
			{ 3715F, -1573.39F, 1799.34F, 4.32359F },
			{ 3782F, -1601.5F, 1785.09F, 4.24319F },
			{ 3872F, -1633.01F, 1764.57F, 4.13519F },
			{ 3933F, -1651.7F, 1750.35F, 4.06199F },
			{ 4055F, -1678.92F, 1722.51F, 3.91559F },
			{ 4162F, -1695.74F, 1700.17F, 3.78718F },
			{ 4232F, -1704.08F, 1686.92F, 3.70318F },
			{ 4340F, -1711.55F, 1670.7F, 3.57358F },
			{ 4438F, -1715.57F, 1660.44F, 3.51478F },
			{ 4514F, -1717.32F, 1655.3F, 3.46918F },
			{ 4625F, -1719.32F, 1647.82F, 3.40258F },
			{ 4736F, -1720.78F, 1640.42F, 3.33598F },
			{ 4796F, -1721.41F, 1636.44F, 3.29998F },
			{ 4888F, -1722.03F, 1630.44F, 3.24478F },
			{ 4962F, -1722.31F, 1625.68F, 3.20038F },
			{ 5034F, -1722.41F, 1619.57F, 3.15718F },
			{ 5153F, -1721.62F, 1605.48F, 3.08578F },
			{ 5230F, -1720.02F, 1594.79F, 2.99338F },
			{ 5322F, -1716.1F, 1579.97F, 2.88298F },
			{ 5396F, -1711.38F, 1566.93F, 2.79418F },
			{ 5492F, -1702.18F, 1548.48F, 2.67898F },
			{ 5547F, -1695.79F, 1537.54F, 2.61298F },
			{ 5666F, -1676.24F, 1512.94F, 2.47018F },
			{ 5766F, -1655.44F, 1492.38F, 2.35018F },
			{ 5834F, -1639.2F, 1478.77F, 2.26858F },
			{ 5913F, -1617.46F, 1463.8F, 2.17378F },
			{ 6036F, -1576.7F, 1443.84F, 2.02618F },
			{ 6095F, -1555.61F, 1435.3F, 1.95538F },
			{ 6191F, -1517.4F, 1424.75F, 1.84018F },
			{ 6261F, -1487.63F, 1419.17F, 1.75618F },
			{ 6334F, -1455.09F, 1413.07F, 1.75618F },
			{ 6433F, -1408.25F, 1404.28F, 1.75618F },
			{ 6493F, -1378.85F, 1398.77F, 1.75618F },
			{ 6569F, -1340F, 1391.48F, 1.75618F },
			{ 6642F, -1301.21F, 1384.21F, 1.75618F },
			{ 6709F, -1264.35F, 1377.29F, 1.75618F },
			{ 6778F, -1225.82F, 1366.7F, 1.83898F },
			{ 6844F, -1188.71F, 1353.27F, 1.91818F },
			{ 6925F, -1141.43F, 1336.15F, 1.91818F },
			{ 7002F, -1094.9F, 1319.3F, 1.91818F },
			{ 7075F, -1049.37F, 1302.82F, 1.91818F },
			{ 7184F, -978.224F, 1277.06F, 1.91818F },
			{ 7242F, -939.471F, 1263.03F, 1.91818F },
			{ 7307F, -896.106F, 1247.32F, 1.91818F },
			{ 7375F, -850.81F, 1230.92F, 1.91818F },
			{ 7457F, -796.292F, 1211.18F, 1.91818F },
			{ 7568F, -726.872F, 1174.99F, 2.05138F },
			{ 7623F, -695.129F, 1155.68F, 2.11738F },
			{ 7695F, -658.167F, 1128.56F, 2.20378F },
			{ 7773F, -623.502F, 1097.75F, 2.29738F },
			{ 7856F, -592.577F, 1064.19F, 2.39698F },
			{ 7925F, -570.844F, 1036.29F, 2.47978F },
			{ 8008F, -550.15F, 1003.45F, 2.57938F },
			{ 8123F, -528.097F, 954.618F, 2.71738F },
			{ 8189F, -517.721F, 925.746F, 2.79658F },
			{ 8292F, -507.243F, 879.2F, 2.92018F },
			{ 8356F, -502.981F, 849.929F, 2.99698F },
			{ 8422F, -500.991F, 819.559F, 3.07618F },
			{ 8492F, -501.59F, 787.363F, 3.16018F },
			{ 8572F, -505.786F, 750.905F, 3.25618F },
			{ 8639F, -511.728F, 720.821F, 3.33658F },
			{ 8720F, -522.376F, 685.421F, 3.43378F },
			{ 8788F, -534.187F, 655.31F, 3.51538F },
			{ 8881F, -555.969F, 614.016F, 3.62698F },
			{ 8994F, -591.08F, 564.938F, 3.76258F },
			{ 9054F, -612.2F, 539.503F, 3.83458F },
			{ 9161F, -657.738F, 497.131F, 3.96298F },
			{ 9275F, -714.97F, 456.908F, 4.09978F },
			{ 9337F, -746.986F, 434.407F, 4.09978F },
			{ 9424F, -793.666F, 401.6F, 4.09978F },
			{ 9547F, -863.166F, 352.756F, 4.09978F },
			{ 9602F, -894.943F, 330.422F, 4.09978F },
			{ 9668F, -934.085F, 302.913F, 4.09978F },
			{ 9752F, -988.914F, 272.114F, 4.20058F },
			{ 9837F, -1049.16F, 245.946F, 4.30259F },
			{ 9901F, -1096.99F, 229.402F, 4.37938F },
			{ 9985F, -1163.57F, 213.656F, 4.48019F },
			{ 10100F, -1256.62F, 204.865F, 4.61819F },
			{ 10193F, -1332.04F, 206.177F, 4.72978F },
			{ 10267F, -1391.97F, 207.219F, 4.72978F },
			{ 10354F, -1458.33F, 208.374F, 4.72978F },
			{ 10425F, -1509.66F, 204.888F, 4.64459F },
			{ 10533F, -1580.22F, 190.776F, 4.51499F },
			{ 10624F, -1633.76F, 173.827F, 4.40579F },
			{ 10684F, -1666.36F, 160.859F, 4.33379F },
			{ 10795F, -1717.14F, 132.33F, 4.20058F },
			{ 10901F, -1756.93F, 102.771F, 4.07338F },
			{ 11000F, -1786.71F, 74.5902F, 3.95458F },
			{ 11082F, -1806.58F, 51.6793F, 3.85618F },
			{ 11187F, -1824.84F, 24.3247F, 3.73018F },
			{ 11296F, -1841.42F, -9.32305F, 3.59938F },
			{ 11373F, -1851.49F, -35.6415F, 3.50698F },
			{ 11434F, -1858.23F, -58.0288F, 3.43378F },
			{ 11547F, -1865.54F, -104.381F, 3.29818F },
			{ 11614F, -1870.08F, -133.121F, 3.29818F },
			{ 11706F, -1876.69F, -174.953F, 3.29818F },
			{ 11764F, -1881.F, -202.268F, 3.29818F },
			{ 11872F, -1889.54F, -256.394F, 3.29818F },
			{ 11976F, -1898.25F, -311.542F, 3.29818F },
			{ 12091F, -1908.46F, -376.223F, 3.29818F },
			{ 12146F, -1913.48F, -408.004F, 3.29818F },
			{ 12241F, -1922.55F, -465.423F, 3.29818F },
			{ 12313F, -1929.65F, -510.391F, 3.29818F },
			{ 12379F, -1932.97F, -553.227F, 3.21898F },
			{ 12484F, -1929.5F, -624.616F, 3.09298F },
			{ 12546F, -1924.18F, -667.581F, 3.01858F },
			{ 12652F, -1914.71F, -744.193F, 3.01858F },
			{ 12729F, -1907.63F, -801.51F, 3.01858F },
			{ 12820F, -1898.96F, -871.574F, 3.01858F },
			{ 12895F, -1886.33F, -929.999F, 2.92858F },
			{ 12997F, -1858.6F, -1009.54F, 2.80618F },
			{ 13061F, -1836.96F, -1059.03F, 2.72938F },
			{ 13166F, -1789.94F, -1137.8F, 2.60338F },
			{ 13229F, -1757.59F, -1183.71F, 2.52778F },
			{ 13312F, -1707.89F, -1241.13F, 2.42818F },
			{ 13408F, -1641.24F, -1302.26F, 2.31298F },
			{ 13495F, -1579.26F, -1359.1F, 2.31298F },
			{ 13577F, -1520.92F, -1412.6F, 2.31298F },
			{ 13642F, -1474.73F, -1454.96F, 2.31298F },
			{ 13735F, -1408.75F, -1515.47F, 2.31298F },
			{ 13840F, -1334.4F, -1583.67F, 2.31298F },
			{ 13910F, -1284.89F, -1629.07F, 2.31298F },
			{ 13993F, -1221.21F, -1676.74F, 2.21338F },
			{ 14076F, -1153.21F, -1717.78F, 2.11378F },
			{ 14142F, -1096.79F, -1746F, 2.03458F },
			{ 14227F, -1020.92F, -1774.71F, 1.93258F },
			{ 14329F, -926.515F, -1797.75F, 1.81018F },
			{ 14431F, -830.178F, -1809.07F, 1.68778F },
			{ 14496F, -768.481F, -1811.48F, 1.60978F },
			{ 14593F, -676.569F, -1815.07F, 1.60978F },
			{ 14697F, -578.205F, -1818.9F, 1.60978F },
			{ 14776F, -503.59F, -1821.81F, 1.60978F },
			{ 14858F, -426.254F, -1824.83F, 1.60978F },
			{ 14940F, -349.03F, -1827.84F, 1.60978F },
			{ 15007F, -286.008F, -1830.3F, 1.60978F },
			{ 15112F, -187.425F, -1834.15F, 1.60978F },
			{ 15172F, -131.152F, -1836.34F, 1.60978F },
			{ 15278F, -31.9249F, -1840.21F, 1.60978F },
			{ 15339F, 25.1157F, -1842.44F, 1.60978F },
			{ 15408F, 89.5576F, -1844.95F, 1.60978F },
			{ 15498F, 173.477F, -1848.23F, 1.60978F },
			{ 15573F, 243.316F, -1850.95F, 1.60978F },
			{ 15655F, 319.561F, -1853.92F, 1.60978F },
			{ 15763F, 419.787F, -1857.83F, 1.60978F },
			{ 15821F, 473.556F, -1859.93F, 1.60978F },
			{ 15888F, 535.594F, -1862.35F, 1.60978F },
			{ 15979F, 615.382F, -1865.46F, 1.60978F },
			{ 16039F, 666.046F, -1867.44F, 1.60978F },
			{ 16140F, 745.822F, -1870.55F, 1.60978F },
			{ 16242F, 820.773F, -1873.48F, 1.60978F },
			{ 16304F, 864.256F, -1875.17F, 1.60978F },
			{ 16371F, 911.174F, -1877.F, 1.60978F },
			{ 16464F, 976.157F, -1879.54F, 1.60978F },
			{ 16536F, 1026.38F, -1881.5F, 1.60978F },
			{ 16619F, 1084.17F, -1883.75F, 1.60978F },
			{ 16722F, 1155.71F, -1886.54F, 1.60978F },
			{ 16811F, 1217.4F, -1888.95F, 1.60978F },
			{ 16868F, 1256.86F, -1887.79F, 1.54138F },
			{ 16919F, 1292.01F, -1884.59F, 1.48018F },
			{ 16986F, 1337.61F, -1876.72F, 1.39978F },
			{ 17070F, 1393.4F, -1861.17F, 1.29898F },
			{ 17178F, 1464.94F, -1841.23F, 1.29898F },
			{ 17251F, 1513.22F, -1827.78F, 1.29898F },
			{ 17356F, 1582.48F, -1808.47F, 1.29898F },
			{ 17418F, 1623.32F, -1797.09F, 1.29898F },
			{ 17519F, 1686.96F, -1770.7F, 1.17778F },
			{ 17604F, 1737.88F, -1743.22F, 1.07578F },
			{ 17666F, 1773.38F, -1720.49F, 1.00138F },
			{ 17733F, 1809.58F, -1692.98F, 0.920985F },
			{ 17800F, 1843.4F, -1662.7F, 0.840585F },
			{ 17909F, 1891.41F, -1606.83F, 0.709785F },
			{ 17988F, 1922.15F, -1563.3F, 0.614985F },
			{ 18066F, 1948.31F, -1517.76F, 0.521384F },
			{ 18175F, 1976.18F, -1450.08F, 0.390584F },
			{ 18234F, 1988.61F, -1412.53F, 0.319784F },
			{ 18316F, 2000.66F, -1358.99F, 0.221384F },
			{ 18432F, 2007.02F, -1281.84F, 0.0821844F },
			{ 18544F, 2003.13F, -1207.4F, 6.23097F },
			{ 18625F, 2000.32F, -1153.68F, 6.23097F },
			{ 18698F, 1997.79F, -1105.34F, 6.23097F },
			{ 18810F, 1993.93F, -1031.39F, 6.23097F },
			{ 18919F, 1990.18F, -959.604F, 6.23097F },
			{ 18982F, 1988.01F, -918.18F, 6.23097F },
			{ 19047F, 1985.78F, -875.509F, 6.23097F },
			{ 19153F, 1982.15F, -806.104F, 6.23097F },
			{ 19229F, 1979.56F, -756.436F, 6.23097F },
			{ 19297F, 1977.37F, -714.489F, 6.23097F },
			{ 19386F, 1974.72F, -663.859F, 6.23097F },
			{ 19474F, 1967.5F, -618.48F, 6.12537F },
			{ 19546F, 1959.08F, -584.716F, 6.03897F },
			{ 19615F, 1949.2F, -555.57F, 5.95617F },
			{ 19695F, 1935.97F, -526.182F, 5.86017F },
			{ 19810F, 1917.03F, -484.128F, 5.86017F },
			{ 19901F, 1902.11F, -450.97F, 5.86017F },
			{ 19993F, 1883.48F, -419.43F, 5.74977F },
			{ 20062F, 1867.65F, -397.073F, 5.66697F },
			{ 20154F, 1843.47F, -369.872F, 5.55657F },
			{ 20237F, 1819.41F, -347.696F, 5.45697F },
			{ 20311F, 1798.63F, -331.708F, 5.36817F },
			{ 20421F, 1770.53F, -315.48F, 5.23617F },
			{ 20485F, 1755.5F, -308.275F, 5.15937F },
			{ 20561F, 1739.87F, -302.466F, 5.06817F },
			{ 20675F, 1715.65F, -297.077F, 4.93137F },
			{ 20726F, 1704.73F, -295.339F, 4.87017F },
			{ 20799F, 1689.02F, -294.235F, 4.78257F },
			{ 20878F, 1672.09F, -294.652F, 4.68777F },
			{ 20943F, 1658.29F, -296.073F, 4.60977F },
			{ 21026F, 1640.78F, -297.876F, 4.60977F },
			{ 21142F, 1616.51F, -300.375F, 4.60977F },
			{ 21209F, 1602.57F, -301.811F, 4.60977F },
			{ 21308F, 1582.12F, -303.917F, 4.60977F },
			{ 21401F, 1563.38F, -307.994F, 4.49817F },
			{ 21475F, 1548.9F, -312.521F, 4.40937F },
			{ 21567F, 1531.75F, -320.046F, 4.29897F },
			{ 21625F, 1521.34F, -325.506F, 4.22937F },
			{ 21711F, 1506.91F, -335.084F, 4.12617F },
			{ 21774F, 1496.96F, -342.84F, 4.05057F },
			{ 21891F, 1480.81F, -359.535F, 3.91017F },
			{ 21987F, 1469.32F, -374.55F, 3.79497F },
			{ 22061F, 1461.57F, -386.791F, 3.70617F },
			{ 22142F, 1454.47F, -400.858F, 3.60897F },
			{ 22206F, 1449.75F, -412.311F, 3.53217F },
			{ 22333F, 1444.01F, -435.949F, 3.37977F },
			{ 22390F, 1442.01F, -447.617F, 3.31137F },
			{ 22439F, 1440.81F, -458.408F, 3.25257F },
			{ 22524F, 1440.62F, -479.291F, 3.15057F },
			{ 22615F, 1443.1F, -503.872F, 3.04137F },
			{ 22710F, 1449.12F, -531.575F, 2.92737F },
			{ 22788F, 1456.7F, -555.401F, 2.83377F },
			{ 22859F, 1465.96F, -577.745F, 2.74857F },
			{ 22964F, 1480.86F, -613.674F, 2.74857F },
			{ 23023F, 1489.61F, -634.775F, 2.74857F },
			{ 23136F, 1507.75F, -678.531F, 2.74857F },
			{ 23209F, 1520.04F, -708.193F, 2.74857F },
			{ 23288F, 1534.03F, -741.927F, 2.74857F },
			{ 23371F, 1549.47F, -779.173F, 2.74857F },
			{ 23462F, 1566.35F, -819.886F, 2.74857F },
			{ 23538F, 1580.41F, -853.803F, 2.74857F },
			{ 23621F, 1595.73F, -890.742F, 2.74857F },
			{ 23728F, 1613.1F, -932.655F, 2.74857F },
			{ 23804F, 1621.76F, -960.448F, 2.83977F },
			{ 23869F, 1626.78F, -982.5F, 2.91777F },
			{ 23988F, 1629.51F, -1016.15F, 3.06057F },
			{ 24069F, 1629.14F, -1039.03F, 3.15777F },
			{ 24160F, 1625.94F, -1064.4F, 3.26697F },
			{ 24219F, 1622.72F, -1080.61F, 3.33777F },
			{ 24302F, 1617.03F, -1099.29F, 3.43737F },
			{ 24371F, 1611.98F, -1111.99F, 3.52017F },
			{ 24452F, 1606.25F, -1123.1F, 3.61737F },
			{ 24536F, 1601.65F, -1131.02F, 3.66777F },
			{ 24620F, 1596.72F, -1138.61F, 3.71817F },
			{ 24732F, 1589.59F, -1148.1F, 3.78537F },
			{ 24790F, 1585.77F, -1152.85F, 3.82017F },
			{ 24879F, 1579.6F, -1159.71F, 3.87357F },
			{ 24950F, 1573.45F, -1165.99F, 3.91617F },
			{ 25065F, 1559.23F, -1176.99F, 4.05417F },
			{ 25134F, 1549.04F, -1183.6F, 4.13697F },
			{ 25200F, 1537.74F, -1189.72F, 4.21617F },
			{ 25303F, 1516.26F, -1198.12F, 4.33977F },
			{ 25382F, 1497.55F, -1203.45F, 4.43457F },
			{ 25494F, 1466.73F, -1207.9F, 4.56897F },
			{ 25565F, 1445.59F, -1209.13F, 4.65417F },
			{ 25680F, 1407.67F, -1206.1F, 4.79217F },
			{ 25735F, 1389.58F, -1204.66F, 4.79217F },
			{ 25815F, 1363.37F, -1202.56F, 4.79217F },
			{ 25889F, 1339.22F, -1200.63F, 4.79217F },
			{ 25965F, 1314.5F, -1198.65F, 4.79217F },
			{ 26033F, 1292.46F, -1196.89F, 4.79217F },
			{ 26120F, 1264.37F, -1194.65F, 4.79217F },
			{ 26184F, 1243.78F, -1193F, 4.79217F },
			{ 26281F, 1213.21F, -1186.93F, 4.90857F },
			{ 26395F, 1178.79F, -1175.02F, 5.04537F },
			{ 26446F, 1163.79F, -1168.78F, 5.10657F },
			{ 26522F, 1142.45F, -1157.52F, 5.19777F },
			{ 26599F, 1122.05F, -1144.22F, 5.29017F },
			{ 26681F, 1101.9F, -1128.06F, 5.38857F },
			{ 26790F, 1078.29F, -1103.4F, 5.51937F },
			{ 26895F, 1058.81F, -1077.12F, 5.64537F },
			{ 26987F, 1044.45F, -1052.47F, 5.75577F },
			{ 27075F, 1033.32F, -1027.68F, 5.86137F },
			{ 27191F, 1022.27F, -989.623F, 6.00057F },
			{ 27245F, 1018.11F, -970.805F, 6.06537F },
			{ 27356F, 1014.47F, -927.849F, 6.19857F },
			{ 27413F, 1014.09F, -904.793F, 6.26697F },
			{ 27494F, 1016.89F, -870.279F, 0.0809836F },
			{ 27565F, 1022.15F, -838.936F, 0.166184F },
			{ 27686F, 1031.8F, -781.428F, 0.166184F },
			{ 27801F, 1041.58F, -723.077F, 0.166184F },
			{ 27887F, 1049.25F, -677.374F, 0.166184F },
			{ 28014F, 1061.32F, -605.376F, 0.166184F },
			{ 28080F, 1067.8F, -566.743F, 0.166184F },
			{ 28156F, 1075.54F, -520.643F, 0.166184F },
			{ 28226F, 1082.89F, -476.815F, 0.166184F },
			{ 28301F, 1091.03F, -428.285F, 0.166184F },
			{ 28401F, 1102.35F, -360.786F, 0.166184F },
			{ 28532F, 1117.99F, -267.571F, 0.166184F },
			{ 28608F, 1127.33F, -211.881F, 0.166184F },
			{ 28697F, 1138.64F, -144.453F, 0.166184F },
			{ 28775F, 1154.F, -86.6409F, 0.259784F },
			{ 28840F, 1170.5F, -39.6735F, 0.337784F },
			{ 28954F, 1210.3F, 37.7956F, 0.474584F },
			{ 29007F, 1231.03F, 72.5236F, 0.538184F },
			{ 29085F, 1266.12F, 120.477F, 0.631784F },
			{ 29150F, 1295.33F, 160.383F, 0.631784F },
			{ 29267F, 1347.77F, 232.032F, 0.631784F },
			{ 29362F, 1390.26F, 290.089F, 0.631784F },
			{ 29424F, 1417.95F, 327.929F, 0.631784F },
			{ 29492F, 1448.28F, 369.369F, 0.631784F },
			{ 29573F, 1484.34F, 418.645F, 0.631784F },
			{ 29683F, 1533.2F, 485.404F, 0.631784F },
			{ 29742F, 1559.37F, 521.165F, 0.631784F },
			{ 29861F, 1612.02F, 593.106F, 0.631784F },
			{ 29959F, 1655.29F, 652.226F, 0.631784F },
			{ 30041F, 1691.42F, 701.604F, 0.631784F },
			{ 30133F, 1731.89F, 756.893F, 0.631784F },
			{ 30207F, 1760.31F, 803.999F, 0.542984F },
			{ 30290F, 1786.74F, 859.641F, 0.443384F },
			{ 30373F, 1813.12F, 915.181F, 0.443384F },
			{ 30474F, 1845.14F, 982.616F, 0.443384F },
			{ 30539F, 1865.72F, 1025.95F, 0.443384F },
			{ 30604F, 1882.84F, 1070.7F, 0.365384F },
			{ 30687F, 1898.88F, 1129.61F, 0.265784F },
			{ 30773F, 1909.1F, 1191.93F, 0.162584F },
			{ 30879F, 1911.85F, 1269.53F, 0.0353837F },
			{ 30959F, 1908.31F, 1327.92F, 6.22257F },
			{ 31038F, 1899.38F, 1384.89F, 6.12777F },
			{ 31119F, 1884.63F, 1442.03F, 6.03057F },
			{ 31203F, 1863.48F, 1499.35F, 5.92977F },
			{ 31287F, 1842.38F, 1556.55F, 5.92977F },
			{ 31402F, 1813.56F, 1634.67F, 5.92977F },
			{ 31470F, 1797.39F, 1678.51F, 5.92977F },
			{ 31540F, 1781.65F, 1721.17F, 5.92977F },
			{ 31631F, 1757.27F, 1770.06F, 5.82057F },
			{ 31701F, 1739.7F, 1805.3F, 5.82057F },
			{ 31765F, 1724.62F, 1835.54F, 5.82057F },
			{ 31850F, 1702.69F, 1870.16F, 5.71857F },
			{ 31963F, 1672.02F, 1906.55F, 5.58297F },
			{ 32016F, 1657.63F, 1921.57F, 5.51937F },
			{ 32084F, 1639.53F, 1937.62F, 5.43777F },
			{ 32154F, 1621.69F, 1950.95F, 5.35377F },
			{ 32232F, 1603.31F, 1962.16F, 5.26017F },
			{ 32334F, 1582.79F, 1971.46F, 5.13777F },
			{ 32418F, 1568.81F, 1976.16F, 5.03697F },
			{ 32499F, 1558.4F, 1978.57F, 4.93977F },
			{ 32585F, 1551.15F, 1979.85F, 4.88817F },
			{ 32671F, 1547.83F, 1980.36F, 4.86237F },
			{ 32731F, 1545.56F, 1980.66F, 4.84437F },
			{ 32840F, 1541.6F, 1981.05F, 4.81167F },
			{ 32898F, 1539.55F, 1981.22F, 4.79427F },
			{ 33002F, 1532.78F, 1981.35F, 4.73187F },
			{ 33065F, 1527.56F, 1981.26F, 4.69407F },
			{ 33149F, 1518.61F, 1980.64F, 4.64367F },
			{ 33217F, 1510.06F, 1980.05F, 4.64367F },
			{ 33334F, 1491.84F, 1976.19F, 4.50327F },
			{ 33398F, 1480.74F, 1973.83F, 4.50327F },
			{ 33466F, 1467.66F, 1971.05F, 4.50327F },
			{ 33550F, 1449.54F, 1967.21F, 4.50327F },
			{ 33615F, 1434.65F, 1962.81F, 4.42527F },
			{ 33688F, 1417.02F, 1955.88F, 4.33767F },
			{ 33764F, 1397.93F, 1946.28F, 4.24647F },
			{ 33840F, 1378.4F, 1934.11F, 4.15527F },
			{ 33912F, 1359.79F, 1920.16F, 4.06887F },
			{ 33999F, 1337.61F, 1899.58F, 3.96447F },
			{ 34082F, 1317.22F, 1876.48F, 3.86487F },
			{ 34162F, 1296.36F, 1852.85F, 3.86487F },
			{ 34245F, 1273.43F, 1826.88F, 3.86487F },
			{ 34317F, 1252.56F, 1803.24F, 3.86487F },
			{ 34395F, 1228.81F, 1776.34F, 3.86487F },
			{ 34463F, 1209.31F, 1750.24F, 3.78327F },
			{ 34530F, 1191.54F, 1721.98F, 3.70287F },
			{ 34615F, 1171.86F, 1682.18F, 3.60087F },
			{ 34694F, 1156.52F, 1641.97F, 3.50607F },
			{ 34776F, 1144.27F, 1597.04F, 3.40767F },
			{ 34889F, 1135.45F, 1529.82F, 3.27207F },
			{ 35005F, 1136.06F, 1460.45F, 3.13287F },
			{ 35082F, 1140.69F, 1414.73F, 3.04047F },
			{ 35151F, 1148.21F, 1374.32F, 2.95767F },
			{ 35226F, 1160.27F, 1331.39F, 2.86767F },
			{ 35334F, 1177.59F, 1269.76F, 2.86767F },
			{ 35393F, 1187.04F, 1236.14F, 2.86767F },
			{ 35502F, 1204.44F, 1174.22F, 2.86767F },
			{ 35576F, 1216.22F, 1132.27F, 2.86767F },
			{ 35688F, 1234.01F, 1068.97F, 2.86767F },
			{ 35741F, 1242.42F, 1039.06F, 2.86767F },
			{ 35818F, 1254.6F, 995.691F, 2.86767F },
			{ 35890F, 1265.24F, 957.836F, 2.86767F },
			{ 35996F, 1279.26F, 907.945F, 2.86767F },
			{ 36058F, 1286.89F, 880.761F, 2.86767F },
			{ 36125F, 1292.3F, 853.194F, 2.94807F },
			{ 36209F, 1295.21F, 821.918F, 3.04887F },
			{ 36278F, 1295.44F, 798.687F, 3.13167F },
			{ 36367F, 1292.55F, 768.986F, 3.23847F },
			{ 36448F, 1287.33F, 742.438F, 3.33567F },
			{ 36565F, 1274.57F, 705.729F, 3.47607F },
			{ 36665F, 1260.06F, 676.027F, 3.59607F },
			{ 36742F, 1246.87F, 654.365F, 3.68847F },
			{ 36825F, 1230.47F, 632.631F, 3.78807F },
			{ 36906F, 1212.55F, 613.151F, 3.88527F },
			{ 37017F, 1184.82F, 590.078F, 4.01847F },
			{ 37074F, 1169.84F, 579.261F, 4.08687F },
			{ 37156F, 1146.97F, 565.945F, 4.18527F },
			{ 37241F, 1122.07F, 554.675F, 4.28727F },
			{ 37336F, 1093.14F, 545.37F, 4.40127F },
			{ 37421F, 1066.64F, 539.748F, 4.50327F },
			{ 37520F, 1035.38F, 536.917F, 4.62207F },
			{ 37613F, 1010.57F, 537.445F, 4.73367F },
			{ 37690F, 993.33F, 539.413F, 4.82607F },
			{ 37755F, 981.19F, 541.769F, 4.90407F },
			{ 37871F, 960.517F, 548.87F, 5.04327F },
			{ 37937F, 949.174F, 553.801F, 5.12247F },
			{ 38020F, 933.892F, 562.343F, 5.22207F },
			{ 38106F, 917.338F, 573.984F, 5.32527F },
			{ 38191F, 900.686F, 588.439F, 5.42727F },
			{ 38269F, 885.521F, 604.321F, 5.52087F },
			{ 38376F, 865.756F, 631.207F, 5.64927F },
			{ 38477F, 848.885F, 661.176F, 5.77047F },
			{ 38590F, 833.384F, 700.314F, 5.90607F },
			{ 38672F, 824.455F, 731.516F, 6.00447F },
			{ 38794F, 810.01F, 781.993F, 6.00447F },
			{ 38869F, 800.692F, 814.557F, 6.00447F },
			{ 38961F, 788.601F, 856.808F, 6.00447F },
			{ 39076F, 772.457F, 913.224F, 6.00447F },
			{ 39151F, 761.489F, 951.549F, 6.00447F },
			{ 39234F, 748.815F, 995.838F, 6.00447F },
			{ 39352F, 729.712F, 1062.6F, 6.00447F },
			{ 39459F, 711.497F, 1126.25F, 6.00447F },
			{ 39516F, 701.541F, 1161.04F, 6.00447F },
			{ 39584F, 689.303F, 1203.81F, 6.00447F },
			{ 39695F, 669.381F, 1273.42F, 6.00447F },
			{ 39749F, 657.532F, 1306.55F, 5.93967F },
			{ 39857F, 628.342F, 1363.57F, 5.81007F },
			{ 39932F, 606.215F, 1398.62F, 5.72007F },
			{ 40040F, 572.117F, 1439.71F, 5.59047F },
			{ 40098F, 553.569F, 1459.13F, 5.52087F },
			{ 40214F, 517.137F, 1487.95F, 5.38167F },
			{ 40283F, 496.263F, 1501.82F, 5.29887F },
			{ 40365F, 473.162F, 1514.09F, 5.20047F },
			{ 40467F, 448.021F, 1523.71F, 5.07807F },
			{ 40588F, 424.566F, 1528.97F, 4.93287F },
			{ 40703F, 402.007F, 1530.84F, 4.79487F },
			{ 40780F, 386.945F, 1530.69F, 4.70247F },
			{ 40891F, 365.645F, 1527.62F, 4.56927F },
			{ 40965F, 351.766F, 1524.34F, 4.48047F },
			{ 41057F, 335.19F, 1518.43F, 4.37007F },
			{ 41132F, 322.246F, 1512.46F, 4.28007F },
			{ 41196F, 310.609F, 1505.96F, 4.20327F },
			{ 41280F, 294.632F, 1494.8F, 4.10247F },
			{ 41346F, 281.858F, 1484.28F, 4.02327F },
			{ 41456F, 260.724F, 1461.58F, 3.89127F },
			{ 41529F, 247.142F, 1444.15F, 3.80367F },
			{ 41654F, 226.435F, 1407.31F, 3.65367F },
			{ 41745F, 213.452F, 1376.85F, 3.54447F },
			{ 41830F, 203.679F, 1345.35F, 3.44247F },
			{ 41920F, 196.546F, 1308.83F, 3.33447F },
			{ 41994F, 190.383F, 1277.27F, 3.33447F },
			{ 42077F, 183.097F, 1239.97F, 3.33447F },
			{ 42147F, 176.685F, 1207.14F, 3.33447F },
			{ 42227F, 169.011F, 1167.84F, 3.33447F },
			{ 42315F, 164.981F, 1121.78F, 3.22887F },
			{ 42397F, 161.059F, 1076.96F, 3.22887F },
			{ 42461F, 157.897F, 1040.83F, 3.22887F },
			{ 42542F, 153.734F, 993.243F, 3.22887F },
			{ 42666F, 146.98F, 916.058F, 3.22887F },
			{ 42782F, 140.33F, 840.058F, 3.22887F },
			{ 42841F, 136.862F, 800.42F, 3.22887F },
			{ 42928F, 131.561F, 739.838F, 3.22887F },
			{ 43041F, 135.551F, 657.331F, 3.09327F },
			{ 43091F, 139.579F, 620.292F, 3.03327F },
			{ 43157F, 145.029F, 570.175F, 3.03327F },
			{ 43241F, 152.182F, 504.405F, 3.03327F },
			{ 43354F, 162.194F, 412.338F, 3.03327F },
			{ 43424F, 168.388F, 355.385F, 3.03327F },
			{ 43523F, 177.13F, 274.999F, 3.03327F },
			{ 43634F, 186.91F, 185.07F, 3.03327F },
			{ 43706F, 188.194F, 126.493F, 3.11967F },
			{ 43818F, 190.188F, 35.5793F, 3.11967F },
			{ 43872F, 191.148F, -8.20599F, 3.11967F },
			{ 43941F, 192.373F, -64.0755F, 3.11967F },
			{ 44032F, 193.986F, -137.622F, 3.11967F },
			{ 44127F, 195.666F, -214.254F, 3.11967F },
			{ 44232F, 197.519F, -298.77F, 3.11967F },
			{ 44289F, 198.524F, -344.597F, 3.11967F },
			{ 44372F, 199.985F, -411.214F, 3.11967F },
			{ 44455F, 201.443F, -477.719F, 3.11967F },
			{ 44523F, 202.636F, -532.128F, 3.11967F },
			{ 44604F, 204.055F, -596.831F, 3.11967F },
			{ 44677F, 205.332F, -655.057F, 3.11967F },
			{ 44755F, 206.694F, -717.17F, 3.11967F },
			{ 44861F, 208.412F, -795.513F, 3.11967F },
			{ 44937F, 209.575F, -848.564F, 3.11967F },
			{ 45004F, 210.547F, -892.909F, 3.11967F },
			{ 45118F, 212.048F, -961.346F, 3.11967F },
			{ 45190F, 212.934F, -1001.77F, 3.11967F },
			{ 45269F, 213.833F, -1042.76F, 3.11967F },
			{ 45392F, 215.053F, -1098.41F, 3.11967F },
			{ 45505F, 216.023F, -1142.65F, 3.11967F },
			{ 45621F, 216.86F, -1180.8F, 3.11967F },
			{ 45705F, 217.382F, -1204.62F, 3.11967F },
			{ 45833F, 217.984F, -1232.08F, 3.11967F },
			{ 45908F, 216.896F, -1248.05F, 3.20967F },
			{ 46005F, 213.126F, -1268.25F, 3.32607F },
			{ 46069F, 209.64F, -1281.29F, 3.40287F },
			{ 46173F, 201.446F, -1301.44F, 3.52767F },
			{ 46234F, 195.815F, -1312.83F, 3.60087F },
			{ 46305F, 188.197F, -1325.41F, 3.68607F },
			{ 46369F, 180.517F, -1336.14F, 3.76287F },
			{ 46450F, 169.595F, -1348.63F, 3.86007F },
			{ 46563F, 152.292F, -1363.71F, 3.99567F },
			{ 46633F, 141.632F, -1373.F, 3.99567F },
			{ 46735F, 126.222F, -1386.42F, 3.99567F },
			{ 46800F, 116.452F, -1394.93F, 3.99567F },
			{ 46907F, 98.8577F, -1406.67F, 4.12407F },
			{ 46973F, 87.526F, -1413.F, 4.20327F },
			{ 47083F, 67.5937F, -1420.89F, 4.33527F },
			{ 47193F, 46.9804F, -1426.05F, 4.46727F },
			{ 47269F, 32.563F, -1428.29F, 4.55847F },
			{ 47376F, 12.2089F, -1428.8F, 4.68687F },
			{ 47431F, 1.79925F, -1428.38F, 4.75287F },
			{ 47540F, -18.3614F, -1424.9F, 4.88367F },
			{ 47640F, -36.1906F, -1419.55F, 5.00367F },
			{ 47721F, -50.0484F, -1413.88F, 5.10087F },
			{ 47783F, -60.2495F, -1408.79F, 5.17527F },
			{ 47866F, -73.0686F, -1400.71F, 5.27487F },
			{ 47953F, -85.4562F, -1390.96F, 5.37927F },
			{ 48034F, -95.9793F, -1380.87F, 5.47647F },
			{ 48112F, -105.098F, -1370.33F, 5.57007F },
			{ 48179F, -112.931F, -1359.65F, 5.65047F },
			{ 48246F, -120.549F, -1347.29F, 5.73087F },
			{ 48329F, -129.271F, -1329.36F, 5.83047F },
			{ 48444F, -138.984F, -1299.52F, 5.96847F },
			{ 48538F, -144.63F, -1271.94F, 6.08127F },
			{ 48596F, -147.047F, -1253.77F, 6.15087F },
			{ 48705F, -152.035F, -1216.3F, 6.15087F },
			{ 48761F, -154.591F, -1197.09F, 6.15087F },
			{ 48830F, -157.73F, -1173.51F, 6.15087F },
			{ 48911F, -161.402F, -1145.92F, 6.15087F },
			{ 49020F, -166.318F, -1108.98F, 6.15087F },
			{ 49124F, -170.986F, -1073.91F, 6.15087F },
			{ 49216F, -175.432F, -1040.51F, 6.15087F },
			{ 49297F, -179.592F, -1009.25F, 6.15087F },
			{ 49363F, -181.021F, -982.368F, 6.23007F },
			{ 49474F, -177.119F, -933.749F, 0.0800819F },
			{ 49542F, -174.624F, -902.659F, 0.0800819F },
			{ 49628F, -171.478F, -863.456F, 0.0800819F },
			{ 49715F, -168.305F, -823.917F, 0.0800819F },
			{ 49793F, -165.468F, -788.566F, 0.0800819F },
			{ 49897F, -161.699F, -741.602F, 0.0800819F },
			{ 50002F, -157.908F, -694.362F, 0.0800819F },
			{ 50059F, -157.608F, -668.688F, 0.0116819F },
			{ 50142F, -157.172F, -631.413F, 0.0116819F },
			{ 50224F, -156.743F, -594.695F, 0.0116819F },
			{ 50309F, -156.3F, -556.748F, 0.0116819F },
			{ 50421F, -155.718F, -506.947F, 0.0116819F },
			{ 50474F, -155.443F, -483.425F, 0.0116819F },
			{ 50542F, -155.092F, -453.32F, 0.0116819F },
			{ 50636F, -154.607F, -411.845F, 0.0116819F },
			{ 50710F, -154.227F, -379.281F, 0.0116819F },
			{ 50773F, -153.904F, -351.621F, 0.0116819F },
			{ 50844F, -153.54F, -320.529F, 0.0116819F },
			{ 50934F, -153.081F, -281.246F, 0.0116819F },
			{ 50991F, -152.791F, -256.418F, 0.0116819F },
			{ 51099F, -152.244F, -209.561F, 0.0116819F },
			{ 51175F, -151.86F, -176.68F, 0.0116819F },
			{ 51288F, -151.369F, -134.681F, 0.0116819F },
			{ 51379F, -151.026F, -105.327F, 0.0116819F },
			{ 51439F, -150.823F, -87.916F, 0.0116819F },
			{ 51551F, -150.522F, -62.1825F, 0.0116819F },
			{ 51647F, -150.323F, -45.0972F, 0.0116819F },
			{ 51752F, -150.106F, -26.5836F, 0.0116819F },
			{ 51845F, -149.916F, -10.3219F, 0.0116819F },
			{ 51904F, -149.797F, -0.060051F, 0.0116819F },
			{ 52012F, -149.579F, 18.5408F, 0.0116819F },
			{ 52088F, -149.427F, 31.5395F, 0.0116819F },
			{ 52184F, -149.237F, 47.8138F, 0.0116819F },
			{ 52254F, -149.1F, 59.6035F, 0.0116819F },
			{ 52362F, -148.889F, 77.6098F, 0.0116819F },
			{ 52463F, -148.694F, 94.2887F, 0.0116819F },
			{ 52519F, -148.587F, 103.487F, 0.0116819F },
			{ 52602F, -148.429F, 117.012F, 0.0116819F },
			{ 52686F, -148.27F, 130.589F, 0.0116819F },
			{ 52799F, -148.059F, 148.652F, 0.0116819F },
			{ 52851F, -147.963F, 156.922F, 0.0116819F },
			{ 52925F, -147.826F, 168.605F, 0.0116819F },
			{ 53001F, -147.687F, 180.512F, 0.0116819F },
			{ 53119F, -147.474F, 198.781F, 0.0116819F } };

	/**
	 * Defaultkonstruktor - ladet die bisher beste Runde
	 */
	public Rundenfahrt() {
		new Thread() {
			public void run() {
				try {
					bisherBesteZeit = ClientBuilder
							.newClient()
							.target("http://" + Netzwerkstrings.IP_ADRESSE
									+ ":8080/ArduinoRacerREST/rest")
							.path("arduinoracer/bisherbesterunde").request()
							.get(Runde.class);
				} catch (Exception e) {

				}
				if (bisherBesteZeit == null) {
					ArrayList<Position> positionen = new ArrayList<Position>();
					for (Object[] objects : defaultPositionen) {
						try {
							positionen.add(new Position((float) objects[1],
									(float) objects[2], (float) objects[3],
									((Number) objects[0]).longValue(), 0));
						} catch (Exception e) {
							System.out.println(e.toString());
							System.out.println(objects[0]);
						}
					}
					bisherBesteZeit = new Runde("NocTho", 13577L, 32334L,
							53177L, positionen);
				}
			}
		}.start();
	}

	/**
	 * setzt die bisher beste Runde, die von einem Webservice geholt wird
	 */
	public void setBisherBesteZeit() {
		new Thread(new Runnable() {
			@Override
			public void run() {
				synchronized (Rundenfahrt.this) {
					try {
						Rundenfahrt.this.bisherBesteZeit = ClientBuilder
								.newClient()
								.target("http://" + Netzwerkstrings.IP_ADRESSE
										+ ":8080/ArduinoRacerREST/rest")
								.path("arduinoracer/bisherbesterunde")
								.request().get(Runde.class);
						if (rundenzeit.getSektor() % 33 > 8)
							anzeige.setZusatzzeit(bisherBesteZeit
									.getSektorString(rundenzeit.getSektor() / 11));
					} catch (Exception e) {
						e.printStackTrace();
					}
				}
			}
		}).start();
	}

	/**
	 * f√ºgt dem √ºbergebenen Dialog keinen Dialog hinzu
	 */
	@Override
	public void getDialoge(NeuesSpielPanel dialog) {
	}

	@Override
	public byte getCurrentSektor() {
		return sektor;
	}

	/**
	 * liefert die aktuelle Rundenzeit zur√ºck
	 * 
	 * @return die aktuelle Rundenzeit
	 */
	public Rundenzeit getRundenzeit() {
		return rundenzeit;
	}

	/**
	 * h√§lt die Spieloberfl√§che sowie die Rundenzeit an und zeigt einen
	 * Pausendialog an
	 */
	@Override
	public void setPauseknopfGedrueckt() {
		if (pauseDialog == null || !pauseDialog.isVisible()) {
			oberflaeche.setPause();
			rundenzeit.setPause(oberflaeche.currentMillis);
			pauseDialog = new RundenfahrtPauseDialog(oberflaeche);
		}
	}

	/**
	 * speichert die √ºbergebene Runde in den Webservice
	 * 
	 * @param runde
	 *            die in den Webservice gespeichert wird
	 */
	public void speichernRunde(final Runde runde) {
		new Thread(new Runnable() {
			@Override
			public void run() {
				ClientBuilder
						.newClient()
						.target("http://" + Netzwerkstrings.IP_ADRESSE
								+ ":8080/ArduinoRacerREST/rest")
						.path("arduinoracer/runde/eintragen")
						.request()
						.post(Entity.entity(runde, MediaType.APPLICATION_XML),
								Boolean.class);
			}
		}).start();
	}

	@Override
	public void run() {
	}

	/**
	 * setzt die Oberfl√§che des Spiels und legt die Anzeige an
	 */
	@Override
	public void onStart(Spieloberflaeche oberflaeche) {
		this.oberflaeche = oberflaeche;
		anzeige = new RundenfahrtAnzeige(oberflaeche);
		autoFuehrender = new MultiplayerAuto(0);
	}

	/**
	 * zeichnet die Anzeige in die 2D-Anzeige der Spieloberfl√§che
	 */
	@Override
	public void onDraw(Bodenbegebenheit bodenbegebenheit, int anzahlReifenImGras) {
		if (anzahlReifenImGras > 1 || bodenbegebenheit.getSektor() == -1)
			rundenzeit.reset();
		else if (bodenbegebenheit.getSektor() != sektor) {
			long zeit = oberflaeche.currentMillis;
			if (sektor == 32)
				zeit -= oberflaeche.getAuto().getZeitImSektor(oberflaeche);
			if ((sektor + 1) % 33 == bodenbegebenheit.getSektor())
				if (rundenzeit.isGestartet()) {
					System.out.println((rundenzeit.getSektor() + 1)
							+ " "
							+ bodenbegebenheit.getSektor()
							+ " "
							+ ((sektor) % 33 == bodenbegebenheit.getSektor())
							+ " "
							+ (bodenbegebenheit.getSektor() == (rundenzeit
									.getSektor() + 1) % 33));
					synchronized (this) {
						System.out.println("setNewSektor");
						rundenzeit.setNewSektor(zeit);
						if (bodenbegebenheit.getSektor() % 11 == 8) {
							anzeige.setZusatzzeit(bisherBesteZeit
									.getSektorString(rundenzeit
											.getLetztenBefahrenenSektor() / 11));
							setBisherBesteZeit();
						}
						if (bodenbegebenheit.getSektor() % 11 == 0)

							if (rundenzeit.isFinished()) {
								anzeige.setZwischenzeit(rundenzeit
										.getRundenzeit()
										- bisherBesteZeit.getEndzeit());
								speichernRunde(rundenzeit.toRunde(oberflaeche
										.getSpielerName()));
								if (bisherBesteZeit.getEndzeit() > rundenzeit
										.getRundenzeit()) {
									bisherBesteZeit = rundenzeit
											.toRunde(oberflaeche
													.getSpielerName());
								}
								rundenzeit.setStart(zeit);
							} else {
								anzeige.setZwischenzeit(rundenzeit
										.getGesamtZwischenzeit(rundenzeit
												.getLetztenBefahrenenSektor())
										- bisherBesteZeit.getSektor((rundenzeit
												.getSektor() + 1) / 11 - 1));
							}
					}
				} else if (sektor == 32)
					rundenzeit.setStart(zeit);
			sektor = bodenbegebenheit.getSektor();
		}
		if (rundenzeit.isGestartet() && !rundenzeit.isFinished()) {
			rundenzeit.addPosition(new Position(oberflaeche.getAuto().getX(),
					oberflaeche.getAuto().getY(), oberflaeche.getAuto()
							.getKurvenwinkel(), rundenzeit
							.getAktuelleZeit(oberflaeche), 0));
		}
		Position position = bisherBesteZeit.getPositionBeiZeit(rundenzeit
				.isGestartet() ? rundenzeit.getAktuelleZeit(oberflaeche) : 0);
		autoFuehrender.setX(position.getX());
		autoFuehrender.setY(position.getY());
		autoFuehrender.setKurvenradius(position.getKurvenwinkel());
		autoFuehrender.display(oberflaeche);

		oberflaeche.anzeige2D.imageMode(PApplet.CORNER);
		anzeige.setZeit(rundenzeit.getAktuelleZeitString(oberflaeche));
		anzeige.display(oberflaeche);
	}

	/**
	 * macht nichts
	 */
	@Override
	public void onStop() {

	}

	/**
	 * f√ºgt der Minimap nicht hinzu
	 */
	@Override
	public void displayMinimap(PGraphics grafik) {
	}

	@Override
	public String toString() {
		return "Rundenfahrt";
	}
}